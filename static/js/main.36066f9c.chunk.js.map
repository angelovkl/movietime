{"version":3,"sources":["components/header/header.styles.jsx","components/header/header.jsx","components/movie-list/movie-list-item.styles.jsx","components/menu/movie-item-menu.styles.jsx","components/menu/movie-item-menu.jsx","components/movie-list/movie-list-item.jsx","components/movie-list/movie-list.styles.jsx","components/movie-list/move-list.jsx","pages/movies/movies.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","background","loginText","position","right","HideOnScroll","props","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","Header","classes","Fragment","CssBaseline","AppBar","className","Toolbar","IconButton","edge","color","aria-label","Typography","variant","MenuWrap","styled","div","BtnWrap","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","cardContent","textAlign","title","margin","StyledMenu","withStyles","paper","border","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","palette","primary","main","common","white","MenuItem","MovieItemMenu","React","useState","anchorEl","setAnchorEl","style","opacity","padding","backdropFilter","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","ListItemIcon","fontSize","ListItemText","MovieListItem","data","Card","CardMedia","image","poster_path","percentage","vote_average","CardContent","date","release_date","ListWrap","MainWrap","AccordeonWrap","ContentWrap","width","heading","typography","pxToRem","fontWeight","fontWeightRegular","btn","filterBtn","MovieList","pages","setPages","setData","disabledFilterButton","setDisabledFilterButton","genres","setGenres","filterClicked","selectedGenres","filter","e","checked","fetchData","a","values","forEach","push","join","axios","get","toString","fetchData1","then","res","results","fetchGenres","map","item","handleFilterChange","z","i","name","useEffect","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","Divider","light","FormGroup","row","index","FormControlLabel","control","Checkbox","onChange","label","Button","disabled","length","MovieListWrap","Movies","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36066f9c.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\n\r\n\r\nexport const useStyles = makeStyles((theme) => ({  \r\n  root: {\r\n    background: \"#1A1A1D\"\r\n  },\r\n  loginText:{\r\n    position: \"absolute\",\r\n    right: \"30px\"\r\n  },\r\n\r\n}));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { AppBar, Toolbar, Typography, CssBaseline, useScrollTrigger, IconButton, Slide } from '@material-ui/core';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { useStyles } from './header.styles';\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  window: PropTypes.func,\r\n};\r\n\r\nconst Header = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <HideOnScroll {...props}>\r\n                <AppBar className={classes.root}>\r\n                    <Toolbar>\r\n                      <IconButton\r\n                          edge=\"start\"        \r\n                          color=\"inherit\"\r\n                          aria-label=\"open drawer\"\r\n                      >\r\n                        <MenuIcon/>\r\n                      </IconButton>\r\n                      <Typography variant=\"h6\">MovieTime</Typography>\r\n                      <Typography className={classes.loginText} variant=\"h6\">Login</Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </HideOnScroll>\r\n            <Toolbar />\r\n        </React.Fragment>\r\n    );\r\n}\r\n \r\nexport default Header;","import styled from 'styled-components';\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nexport const MenuWrap = styled.div`\r\n    text-align: right;\r\n    float: right;\r\n`;\r\nexport const BtnWrap = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    bottom: 25px;\r\n    padding: 0px 0px 0px 15px;\r\n    backdrop-filter: blur(5px);\r\n`;\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: 220\r\n    },\r\n    media: {\r\n      height: 200,\r\n      paddingTop: '100%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    cardContent:{\r\n      textAlign: \"left\",\r\n      paddingTop: 0\r\n    },\r\n    title: {\r\n      margin: 0\r\n    }\r\n  }));","import { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\n\r\nexport const StyledMenu = withStyles({\r\n    paper: {\r\n      border: '1px solid #d3d4d5',\r\n    },\r\n  })((props) => (\r\n    <Menu\r\n      elevation={0}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      }}\r\n      {...props}\r\n    />\r\n));\r\n  \r\nexport const StyledMenuItem = withStyles((theme) => ({\r\n    root: {\r\n      '&:focus': {\r\n        backgroundColor: theme.palette.primary.main,\r\n        '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n          color: theme.palette.common.white,\r\n        },\r\n      },\r\n    },\r\n}))(MenuItem);\r\n\r\n","import React from 'react';\r\n\r\nimport { ListItemIcon, ListItemText, IconButton} from '@material-ui/core';\r\n\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport { StyledMenu, StyledMenuItem } from './movie-item-menu.styles';\r\n\r\nconst MovieItemMenu = () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n      setAnchorEl(null);\r\n  };\r\n  \r\n  return ( \r\n    <div style={{opacity:\"0.8\", padding: \"10px\"}}>\r\n      <IconButton style={{backdropFilter: \"blur(11px)\", background: \"white\"}} onClick={handleClick} aria-label=\"settings\">\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      \r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <StyledMenuItem>\r\n          <ListItemIcon>\r\n            <SendIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Add to list\" />\r\n        </StyledMenuItem>\r\n        <StyledMenuItem>\r\n          <ListItemIcon>\r\n            <DraftsIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Watchlist\" />\r\n        </StyledMenuItem>\r\n        <StyledMenuItem>\r\n          <ListItemIcon>\r\n            <InboxIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Your rating\" />\r\n        </StyledMenuItem>\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default MovieItemMenu;","import React from 'react';\r\nimport { ProgressCircle } from 'react-simple-circle-rating';\r\n\r\nimport { Card, CardMedia, CardContent} from '@material-ui/core';\r\n\r\nimport { useStyles, MenuWrap, BtnWrap } from './movie-list-item.styles';\r\nimport MovieItemMenu from '../menu/movie-item-menu';\r\n\r\nconst MovieListItem = ({data}) => {\r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <Card className={classes.root}>\r\n            <MenuWrap>\r\n                <MovieItemMenu></MovieItemMenu>\r\n            </MenuWrap>\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={`http://image.tmdb.org/t/p/w185/${data.poster_path}`}\r\n                title={data.title}\r\n            />\r\n            <BtnWrap>\r\n                <ProgressCircle  percentage={data.vote_average*10}/>\r\n            </BtnWrap>\r\n            <CardContent className={classes.cardContent}>\r\n                <h3 className={classes.title}>\r\n                {data.title}\r\n                </h3>\r\n                <span  className={classes.date}>{data.release_date}</span>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n \r\nexport default MovieListItem;","import styled from 'styled-components';\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const ListWrap = styled.div`\r\n    display: grid;\r\n    grid-column-gap: 10px;\r\n\r\n    @media (min-width: 480px) {\r\n        grid-template-columns: 150px;\r\n        grid-row-gap: 10px;\r\n        \r\n    }\r\n    @media (min-width: 768px) {\r\n        grid-template-columns: 200px 200px;\r\n        grid-row-gap: 15px;\r\n    }\r\n    @media (min-width: 1024px) {\r\n        grid-template-columns: 200px 200px 200px;\r\n        grid-row-gap: 20px;\r\n    }\r\n    @media (min-width: 1200px) {\r\n        grid-template-columns: 200px 200px 200px 200px 200px;\r\n        grid-row-gap: 30px;\r\n    }\r\n`;\r\n\r\nexport const MainWrap = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 20em 1fr;\r\n    grid-row-gap: 40px;\r\n    grid-column-gap: 40px;\r\n\r\n    @media (min-width: 480px) {\r\n         grid-column-gap: 0px;\r\n    }\r\n`;\r\n\r\nexport const AccordeonWrap = styled.div`\r\n    padding: 0px 30px 0px 30px !important\r\n`;\r\n\r\nexport const ContentWrap = styled.div`\r\n   \r\n`;\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    btn:{\r\n        width: \"30%\",\r\n        background:\"#C3073F\",\r\n        margin: \"30px 0 30px 0;\",\r\n        fontSize:\" 25px\",\r\n        color: \"white\",\r\n        '&:hover': {\r\n            background: \"#950740\",\r\n         },\r\n    },\r\n    filterBtn:{\r\n        background: \"#C3073F\",\r\n        width: \"100%\",\r\n        margin: \"15px 0px 0px 0px\",\r\n        color: \"white\",\r\n        '&:hover': {\r\n            background: \"#950740\",\r\n         },\r\n    }\r\n}));","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport MovieListItem from './movie-list-item';\r\n\r\nimport {\r\n    Button, \r\n    Typography, \r\n    Accordion, \r\n    AccordionSummary, \r\n    AccordionDetails, \r\n    FormGroup, \r\n    FormControlLabel, \r\n    Checkbox, \r\n    Divider\r\n} from '@material-ui/core';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport { useStyles, ContentWrap, AccordeonWrap, MainWrap, ListWrap } from './movie-list.styles';\r\n\r\nconst MovieList = () => {\r\n    const classes = useStyles();\r\n    const [pages, setPages] = React.useState(1);\r\n    const [data, setData] = React.useState([])\r\n    const [disabledFilterButton, setDisabledFilterButton] = React.useState(true)\r\n    const [genres, setGenres] = React.useState([]);\r\n\r\n    let filterClicked = false;\r\n    let selectedGenres = genres.filter(e=> e.checked)\r\n   \r\n    const fetchData = async () =>{\r\n        let values=[];\r\n        selectedGenres.forEach(a =>{\r\n            values.push(a.id)\r\n        })\r\n        values = values.join();\r\n        const fetchData1 = async () => {\r\n            return await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=c5c1b8e55a900e3e1d2fde4c8517d44a&page=${pages}&with_genres=${values.toString()}`);\r\n        }\r\n\r\n        fetchData1().then(res=> {\r\n            let a = data;\r\n            if(filterClicked){\r\n                if(res.data.results){\r\n                    return setData(\r\n                        [...res.data.results ]\r\n                    )\r\n                }\r\n            }else{\r\n                return setData(\r\n                    [...a, ...res.data.results ]\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    const fetchGenres = async () =>{\r\n        const fetchData = async () => {\r\n            return await axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=c5c1b8e55a900e3e1d2fde4c8517d44a`);\r\n        }\r\n        fetchData().then(res=> {\r\n            let a = res.data.genres.map(item=>(\r\n                {\r\n                    ...item,\r\n                    checked: false\r\n                }\r\n            ))\r\n            return setGenres(a)\r\n        })\r\n    }\r\n\r\n    const loadMore = () =>{\r\n        setPages(pages + 1)\r\n    }\r\n\r\n    const handleFilterChange = (event) => {\r\n        filterClicked = false\r\n        setDisabledFilterButton(false)\r\n        let z = genres.map(i=>(\r\n            i.name === event.target.name ?\r\n            {\r\n                ...i,\r\n                checked: i.checked ? false : true\r\n            }\r\n            :\r\n            {\r\n                ...i                \r\n            }\r\n        ))\r\n        setGenres(z);\r\n    };\r\n\r\n    const handleFilter = (event) => {\r\n        setDisabledFilterButton(true)\r\n        filterClicked = true;\r\n        fetchData();\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        fetchData();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [pages]) \r\n    \r\n    React.useEffect(() => {\r\n        fetchGenres();\r\n    }, []) \r\n   \r\n    return ( \r\n        <div>\r\n            <MainWrap>\r\n                <AccordeonWrap >\r\n                    <Accordion >\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon  />}\r\n                            aria-controls=\"panel1a-content\"\r\n                            id=\"panel1a-header\"     \r\n                        >\r\n                            <SearchIcon/>\r\n                            <Typography  >Filter</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <div>\r\n                                <h4>Genres</h4>\r\n                                <Divider light />\r\n                                <FormGroup row>\r\n                                    {\r\n                                        genres &&\r\n                                        genres.map((item,index)=>{\r\n                                            return <FormControlLabel key={index}\r\n                                            control={<Checkbox key={item.id} checked={item.checked} onChange={handleFilterChange} name={item.name} />}\r\n                                            label={item.name}\r\n                                        />\r\n                                        })\r\n                                    }\r\n                                </FormGroup>\r\n                            </div>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    <Button disabled={disabledFilterButton} className={classes.filterBtn} onClick={handleFilter} variant=\"contained\">Filter</Button>\r\n                </AccordeonWrap>    \r\n                <ContentWrap>\r\n                    <ListWrap>\r\n                        {\r\n                            data &&\r\n                            data.map(e =>{\r\n                                return <MovieListItem key={e.id} data={e} />\r\n                            })\r\n                        }\r\n                    </ListWrap>\r\n                    {\r\n                    data.length !== 0 ?\r\n                        <Button className={classes.btn} onClick={loadMore} variant=\"contained\">Load More</Button>\r\n                    : selectedGenres.length !== 0 ?\r\n                        <p>No items were found that match your query.</p>\r\n                    :\r\n                        <p>Loading</p>\r\n                    }\r\n                </ContentWrap>   \r\n            </MainWrap>       \r\n        </div>\r\n    );\r\n}\r\n \r\nexport default MovieList;","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport MovieList from '../../components/movie-list/move-list';\r\n\r\nconst MovieListWrap = styled.div`\r\n    margin: 50px 0 0 0;\r\n`;\r\n\r\nconst Movies = () => {\r\n\r\n    return ( \r\n        <div>\r\n            <MovieListWrap>\r\n                <MovieList ></MovieList>\r\n            </MovieListWrap>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Movies;","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\n\r\nimport Header from './components/header/header';\r\nimport Movies from './pages/movies/movies';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header></Header>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/movietime\"\r\n            component={() => <Movies />}\r\n          />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}